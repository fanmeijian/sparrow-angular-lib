/**
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.19.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export interface HistoricTaskInstanceQueryDtoSorting { 
    /**
     * Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter.
     */
    sortBy?: HistoricTaskInstanceQueryDtoSorting.SortByEnum;
    /**
     * Sort the results in a given order. Values may be `asc` for ascending order or `desc` for descending order. Must be used in conjunction with the sortBy parameter.
     */
    sortOrder?: HistoricTaskInstanceQueryDtoSorting.SortOrderEnum;
}
export namespace HistoricTaskInstanceQueryDtoSorting {
    export type SortByEnum = 'taskId' | 'activityInstanceId' | 'processDefinitionId' | 'processInstanceId' | 'executionId' | 'duration' | 'endTime' | 'startTime' | 'taskName' | 'taskDescription' | 'assignee' | 'owner' | 'dueDate' | 'followUpDate' | 'deleteReason' | 'taskDefinitionKey' | 'priority' | 'caseDefinitionId' | 'caseInstanceId' | 'caseExecutionId' | 'tenantId';
    export const SortByEnum = {
        TaskId: 'taskId' as SortByEnum,
        ActivityInstanceId: 'activityInstanceId' as SortByEnum,
        ProcessDefinitionId: 'processDefinitionId' as SortByEnum,
        ProcessInstanceId: 'processInstanceId' as SortByEnum,
        ExecutionId: 'executionId' as SortByEnum,
        Duration: 'duration' as SortByEnum,
        EndTime: 'endTime' as SortByEnum,
        StartTime: 'startTime' as SortByEnum,
        TaskName: 'taskName' as SortByEnum,
        TaskDescription: 'taskDescription' as SortByEnum,
        Assignee: 'assignee' as SortByEnum,
        Owner: 'owner' as SortByEnum,
        DueDate: 'dueDate' as SortByEnum,
        FollowUpDate: 'followUpDate' as SortByEnum,
        DeleteReason: 'deleteReason' as SortByEnum,
        TaskDefinitionKey: 'taskDefinitionKey' as SortByEnum,
        Priority: 'priority' as SortByEnum,
        CaseDefinitionId: 'caseDefinitionId' as SortByEnum,
        CaseInstanceId: 'caseInstanceId' as SortByEnum,
        CaseExecutionId: 'caseExecutionId' as SortByEnum,
        TenantId: 'tenantId' as SortByEnum
    };
    export type SortOrderEnum = 'asc' | 'desc';
    export const SortOrderEnum = {
        Asc: 'asc' as SortOrderEnum,
        Desc: 'desc' as SortOrderEnum
    };
}