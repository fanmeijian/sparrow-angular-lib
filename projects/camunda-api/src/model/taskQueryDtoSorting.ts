/**
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.19.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { SortTaskQueryParametersDto } from './sortTaskQueryParametersDto';

export interface TaskQueryDtoSorting { 
    /**
     * Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter.
     */
    sortBy?: TaskQueryDtoSorting.SortByEnum;
    /**
     * Sort the results in a given order. Values may be `asc` for ascending order or `desc` for descending order. Must be used in conjunction with the sortBy parameter.
     */
    sortOrder?: TaskQueryDtoSorting.SortOrderEnum;
    parameters?: SortTaskQueryParametersDto;
}
export namespace TaskQueryDtoSorting {
    export type SortByEnum = 'instanceId' | 'caseInstanceId' | 'dueDate' | 'executionId' | 'caseExecutionId' | 'assignee' | 'created' | 'lastUpdated' | 'followUpDate' | 'description' | 'id' | 'name' | 'nameCaseInsensitive' | 'priority' | 'processVariable' | 'executionVariable' | 'taskVariable' | 'caseExecutionVariable' | 'caseInstanceVariable';
    export const SortByEnum = {
        InstanceId: 'instanceId' as SortByEnum,
        CaseInstanceId: 'caseInstanceId' as SortByEnum,
        DueDate: 'dueDate' as SortByEnum,
        ExecutionId: 'executionId' as SortByEnum,
        CaseExecutionId: 'caseExecutionId' as SortByEnum,
        Assignee: 'assignee' as SortByEnum,
        Created: 'created' as SortByEnum,
        LastUpdated: 'lastUpdated' as SortByEnum,
        FollowUpDate: 'followUpDate' as SortByEnum,
        Description: 'description' as SortByEnum,
        Id: 'id' as SortByEnum,
        Name: 'name' as SortByEnum,
        NameCaseInsensitive: 'nameCaseInsensitive' as SortByEnum,
        Priority: 'priority' as SortByEnum,
        ProcessVariable: 'processVariable' as SortByEnum,
        ExecutionVariable: 'executionVariable' as SortByEnum,
        TaskVariable: 'taskVariable' as SortByEnum,
        CaseExecutionVariable: 'caseExecutionVariable' as SortByEnum,
        CaseInstanceVariable: 'caseInstanceVariable' as SortByEnum
    };
    export type SortOrderEnum = 'asc' | 'desc';
    export const SortOrderEnum = {
        Asc: 'asc' as SortOrderEnum,
        Desc: 'desc' as SortOrderEnum
    };
}