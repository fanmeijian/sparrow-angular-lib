/**
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.19.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export interface HistoricDecisionOutputInstanceDto { 
    /**
     * The id of the decision output value.
     */
    id?: string;
    /**
     * The id of the decision instance the output value belongs to.
     */
    decisionInstanceId?: string;
    /**
     * The id of the clause the output value belongs to.
     */
    clauseId?: string;
    /**
     * The name of the clause the output value belongs to.
     */
    clauseName?: string;
    /**
     * The id of the rule the output value belongs to.
     */
    ruleId?: string;
    /**
     * The order of the rule the output value belongs to.
     */
    ruleOrder?: number;
    /**
     * An error message in case a Java Serialized Object could not be de-serialized.
     */
    errorMessage?: string;
    /**
     * The name of the output variable.
     */
    variableName?: string;
    /**
     * The value type of the variable.
     */
    type?: string;
    /**
     * The time the variable was inserted.  [Default format](https://docs.camunda.org/manual/7.19/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
     */
    createTime?: Date;
    /**
     * The time after which the entry should be removed by the History Cleanup job. [Default format](https://docs.camunda.org/manual/7.19/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
     */
    removalTime?: Date;
    /**
     * The process instance id of the root process instance that initiated the process containing this entry.
     */
    rootProcessInstanceId?: string;
    /**
     * The variable's value. Value differs depending on the variable's type and on the `disableCustomObjectDeserialization` parameter.
     */
    value?: any;
    /**
     * A JSON object containing additional, value-type-dependent properties.  For variables of type `Object`, the following properties are returned:  * `objectTypeName`: A string representation of the object's type name.  * `serializationDataFormat`: The serialization format used to store the variable.
     */
    valueInfo?: { [key: string]: any; };
}